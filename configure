#!/bin/bash

cd "$(dirname "$0")"

die() {
	local pattern="$1"
	shift
	printf "$pattern\n" "$@" >&2
	exit 1
}

short_usage() {
	echo "usage: ./configure [--help] [PARAM=value ...]"
}

usage() {
	short_usage
	echo
	echo "Command-line options:"
	echo "  --help -h          Show this help message."
	echo
	echo "Parameters:"
	echo "  PREFIX=/usr/local  Set the installation prefix."
	echo "  LIBDIR=lib         Set the installation path for libraries."
	echo "  BINDIR=bin         Set the installation path for binaries."
	echo
	echo "If LIBDIR or BINDIR are given as relative path,"
	echo "they are interpreted relative to PREFIX."
}

parse_single_config() {
	local arg="$1"
	if ! [[ $arg =~ ([_a-zA-Z0-9]+)=(.*) ]]; then
		short_usage >&2
		die "\nunrecognized argument: %s" "$arg"
	fi

	name="${BASH_REMATCH[1]}"
	value="${BASH_REMATCH[2]}"
	case "$name" in
		PREFIX) PREFIX="$value";;
		LIBDIR) LIBDIR="$value";;
		BINDIR) BINDIR="$value";;
		*)
			short_usage >&2
			die "\nunrecognized parameter: %s" "$name";;
	esac
}

parse_config() {
	while read arg; do
		parse_single_config "$arg"
	done
}

parse_args() {
	for arg in "$@"; do
		if [[ $arg == "--help" || $arg == "-h" ]]; then
			usage
			exit 0
		fi
		parse_single_config "$arg"
	done
}

generate_config() {
cat <<EOF
PREFIX=$PREFIX
LIBDIR=$LIBDIR
BINDIR=$BINDIR
EOF
}

PREFIX="${PREFIX-/usr/local}"
LIBDIR="${LIBDIR-lib}"
BINDIR="${BINDIR-bin}"

[[ -f config.cache ]] && parse_config < config.cache
parse_args "$@"

printf "PREFIX: %s\n" "$PREFIX"
printf "LIBDIR: %s\n" "$LIBDIR"
printf "BINDIR: %s\n" "$BINDIR"

echo "Generating config.cache"
generate_config > config.cache
